# Generated by Django 3.2.3 on 2022-09-02 21:45

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='YgDoctrine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Заголовок')),
                ('short_desc', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Краткое описание')),
                ('full_info', models.TextField(blank=True, null=True, verbose_name='Полная информация')),
                ('moderated', models.BooleanField(default=False, verbose_name='Проверено')),
            ],
            options={
                'verbose_name': 'Учение',
                'verbose_name_plural': 'Учения',
            },
        ),
        migrations.CreateModel(
            name='YgExperience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Заголовок')),
                ('order', models.IntegerField(default=0, verbose_name='Порядок')),
            ],
            options={
                'verbose_name': 'Опыт практики',
                'verbose_name_plural': 'Опыт практики',
            },
        ),
        migrations.CreateModel(
            name='YgGender',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Заголовок')),
                ('order', models.IntegerField(default=0, verbose_name='Порядок')),
            ],
            options={
                'verbose_name': 'Гендер',
                'verbose_name_plural': 'Гендер',
            },
        ),
        migrations.CreateModel(
            name='YgInterest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Заголовок')),
                ('moderated', models.BooleanField(default=False, verbose_name='Проверено')),
            ],
            options={
                'verbose_name': 'Интерес',
                'verbose_name_plural': 'Интересы',
            },
        ),
        migrations.CreateModel(
            name='YgLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Заголовок')),
                ('moderated', models.BooleanField(default=False, verbose_name='Проверено')),
            ],
            options={
                'verbose_name': 'Местоположение',
                'verbose_name_plural': 'Местоположение',
            },
        ),
        migrations.CreateModel(
            name='YgMaritalStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Заголовок')),
                ('title_fem', models.CharField(blank=True, max_length=100, null=True, verbose_name='Написание для женщин')),
                ('title_neutral', models.CharField(blank=True, max_length=200, null=True, verbose_name='Нейтральное написание')),
                ('order', models.IntegerField(default=0, verbose_name='Порядок')),
            ],
            options={
                'verbose_name': 'Семейное положение',
                'verbose_name_plural': 'Семейное положение',
            },
        ),
        migrations.CreateModel(
            name='YgPractice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Название')),
                ('short_desc', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Краткое описание')),
                ('full_info', models.TextField(blank=True, null=True, verbose_name='Полная информация')),
                ('moderated', models.BooleanField(default=False, verbose_name='Проверено')),
            ],
            options={
                'verbose_name': 'Практика',
                'verbose_name_plural': 'Практики',
            },
        ),
        migrations.CreateModel(
            name='YgTradition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Название')),
                ('short_desc', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Краткое описание')),
                ('full_info', models.TextField(blank=True, null=True, verbose_name='Полная информация')),
                ('moderated', models.BooleanField(default=False, verbose_name='Проверено')),
            ],
            options={
                'verbose_name': 'Традиция',
                'verbose_name_plural': 'Традиции',
            },
        ),
        migrations.CreateModel(
            name='YgUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('_profile_pic', models.ImageField(blank=True, null=True, upload_to='user/profile_pic', verbose_name='Аватар')),
                ('profile_pic_full', models.ImageField(blank=True, null=True, upload_to='user/profile_pic/full', verbose_name='Аватар полный')),
                ('is_online', models.BooleanField(default=False, null=True, verbose_name='Онлайн')),
                ('social_data_loaded', models.BooleanField(default=False, null=True, verbose_name='Загружены данные соцсети')),
                ('gender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='userProfile.yggender', verbose_name='Гендер')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='YgUserInfo',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='userProfile.yguser', verbose_name='Пользователь')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('about', models.TextField(blank=True, null=True, verbose_name='О себе')),
                ('request', models.CharField(blank=True, max_length=2000, null=True, verbose_name='Ищу')),
                ('doctrines', models.ManyToManyField(blank=True, to='userProfile.YgDoctrine', verbose_name='Учения')),
                ('experience', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='userProfile.ygexperience', verbose_name='Опыт практики')),
                ('interests', models.ManyToManyField(blank=True, to='userProfile.YgInterest', verbose_name='Интересы')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='userProfile.yglocation', verbose_name='Место жительства')),
                ('marital_status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='userProfile.ygmaritalstatus', verbose_name='Семейное положение')),
                ('practices', models.ManyToManyField(blank=True, to='userProfile.YgPractice', verbose_name='Практики')),
                ('traditions', models.ManyToManyField(blank=True, to='userProfile.YgTradition', verbose_name='Традиции')),
            ],
            options={
                'verbose_name': 'Данные пользователя',
                'verbose_name_plural': 'Данные пользователей',
            },
        ),
    ]
